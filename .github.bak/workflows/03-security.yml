name: 03 - Security & Compliance

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    - cron: '0 3 * * *' # Daily security scan

jobs:
  vulnerability-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  secrets-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run TruffleHog
        run: |
          docker run --rm -v "$(pwd):/app" trufflesecurity/trufflehog:latest \
            --path /app --format sarif --output /app/trufflehog-results.sarif

      - name: Upload TruffleHog results
        uses: actions/upload-artifact@v4
        with:
          name: trufflehog-results
          path: trufflehog-results.sarif

  compliance-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Check for hardcoded secrets
        run: |
          # Check for common secret patterns
          if grep -r "sk-[a-zA-Z0-9]{48}" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "❌ Hardcoded OpenAI keys found"
            exit 1
          fi
          
          if grep -r "pk_[a-zA-Z0-9]{24}" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "❌ Hardcoded Stripe keys found"
            exit 1
          fi
          
          if grep -r "AIza[a-zA-Z0-9]{35}" . --exclude-dir=node_modules --exclude-dir=.git; then
            echo "❌ Hardcoded Google API keys found"
            exit 1
          fi
          
          echo "✅ No hardcoded secrets found"

      - name: Check file permissions
        run: |
          # Check for overly permissive files
          find . -type f -perm /0111 -name "*.sh" -exec chmod 755 {} \;
          find . -type f -perm /0111 -name "*.py" -exec chmod 755 {} \;
          echo "✅ File permissions checked and fixed"

      - name: Check for suspicious files
        run: |
          # Check for potentially dangerous file types
          if find . -name "*.exe" -o -name "*.bat" -o -name "*.cmd" | grep -q .; then
            echo "❌ Suspicious executable files found"
            exit 1
          fi
          echo "✅ No suspicious files found"

  dependency-vulnerabilities:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit with JSON output
        run: npm audit --json > audit-report.json || true

      - name: Check for critical vulnerabilities
        run: |
          if [ -f audit-report.json ]; then
            CRITICAL_COUNT=$(jq '.metadata.vulnerabilities.critical // 0' audit-report.json)
            if [ "$CRITICAL_COUNT" -gt 0 ]; then
              echo "❌ $CRITICAL_COUNT critical vulnerabilities found"
              exit 1
            fi
            echo "✅ No critical vulnerabilities found"
          fi

      - name: Upload audit report
        uses: actions/upload-artifact@v4
        with:
          name: npm-audit-report
          path: audit-report.json
