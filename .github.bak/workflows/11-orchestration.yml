name: 11 - Pipeline Orchestration

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      pipeline_type:
        description: 'Type of pipeline to run'
        required: true
        default: 'full'
        type: choice
        options:
        - full
        - quick
        - security
        - deployment
        - maintenance

env:
  PIPELINE_TYPE: ${{ github.event.inputs.pipeline_type || 'full' }}

jobs:
  pipeline-coordination:
    runs-on: ubuntu-latest
    outputs:
      pipeline-status: ${{ steps.status.outputs.status }}
    steps:
      - name: Pipeline initialization
        run: |
          echo "🚀 Starting CI/CD Pipeline"
          echo "Type: ${{ env.PIPELINE_TYPE }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"
          echo "Trigger: ${{ github.event_name }}"

      - name: Set pipeline status
        id: status
        run: |
          echo "status=initialized" >> $GITHUB_OUTPUT

  dependencies-check:
    runs-on: ubuntu-latest
    needs: pipeline-coordination
    steps:
      - name: Trigger dependencies workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '01-dependencies.yml',
              ref: context.ref
            });
            console.log('✅ Dependencies workflow triggered');

      - name: Wait for dependencies completion
        run: |
          echo "⏳ Waiting for dependencies workflow to complete..."
          sleep 60

  testing-pipeline:
    runs-on: ubuntu-latest
    needs: dependencies-check
    if: github.event.inputs.pipeline_type == 'full' || github.event.inputs.pipeline_type == 'quick' || github.event.inputs.pipeline_type == null
    steps:
      - name: Trigger testing workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '02-testing.yml',
              ref: context.ref
            });
            console.log('✅ Testing workflow triggered');

      - name: Wait for testing completion
        run: |
          echo "⏳ Waiting for testing workflow to complete..."
          sleep 120

  security-pipeline:
    runs-on: ubuntu-latest
    needs: dependencies-check
    if: github.event.inputs.pipeline_type == 'full' || github.event.inputs.pipeline_type == 'security' || github.event.inputs.pipeline_type == null
    steps:
      - name: Trigger security workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '03-security.yml',
              ref: context.ref
            });
            console.log('✅ Security workflow triggered');

      - name: Wait for security completion
        run: |
          echo "⏳ Waiting for security workflow to complete..."
          sleep 90

  performance-pipeline:
    runs-on: ubuntu-latest
    needs: [testing-pipeline, security-pipeline]
    if: github.event.inputs.pipeline_type == 'full' || github.event.inputs.pipeline_type == null
    steps:
      - name: Trigger performance workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '04-performance.yml',
              ref: context.ref
            });
            console.log('✅ Performance workflow triggered');

      - name: Wait for performance completion
        run: |
          echo "⏳ Waiting for performance workflow to complete..."
          sleep 180

  database-pipeline:
    runs-on: ubuntu-latest
    needs: [testing-pipeline, security-pipeline]
    if: github.event.inputs.pipeline_type == 'full' || github.event.inputs.pipeline_type == null
    steps:
      - name: Trigger database workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '05-database.yml',
              ref: context.ref
            });
            console.log('✅ Database workflow triggered');

      - name: Wait for database completion
        run: |
          echo "⏳ Waiting for database workflow to complete..."
          sleep 120

  build-deploy-pipeline:
    runs-on: ubuntu-latest
    needs: [performance-pipeline, database-pipeline]
    if: github.event.inputs.pipeline_type == 'full' || github.event.inputs.pipeline_type == 'deployment' || github.event.inputs.pipeline_type == null
    steps:
      - name: Trigger build-deploy workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '06-build-deploy.yml',
              ref: context.ref
            });
            console.log('✅ Build-deploy workflow triggered');

      - name: Wait for deployment completion
        run: |
          echo "⏳ Waiting for deployment workflow to complete..."
          sleep 300

  monitoring-pipeline:
    runs-on: ubuntu-latest
    needs: build-deploy-pipeline
    if: github.event.inputs.pipeline_type == 'full' || github.event.inputs.pipeline_type == null
    steps:
      - name: Trigger monitoring workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '07-monitoring.yml',
              ref: context.ref
            });
            console.log('✅ Monitoring workflow triggered');

      - name: Wait for monitoring completion
        run: |
          echo "⏳ Waiting for monitoring workflow to complete..."
          sleep 60

  maintenance-pipeline:
    runs-on: ubuntu-latest
    needs: [monitoring-pipeline]
    if: github.event.inputs.pipeline_type == 'full' || github.event.inputs.pipeline_type == 'maintenance' || github.event.inputs.pipeline_type == null
    steps:
      - name: Trigger backup workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '09-backup.yml',
              ref: context.ref
            });
            console.log('✅ Backup workflow triggered');

      - name: Wait for backup completion
        run: |
          echo "⏳ Waiting for backup workflow to complete..."
          sleep 120

      - name: Trigger cleanup workflow
        uses: actions/github-script@v7
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: '10-cleanup.yml',
              ref: context.ref
            });
            console.log('✅ Cleanup workflow triggered');

      - name: Wait for cleanup completion
        run: |
          echo "⏳ Waiting for cleanup workflow to complete..."
          sleep 90

  pipeline-completion:
    runs-on: ubuntu-latest
    needs: [pipeline-coordination, dependencies-check, testing-pipeline, security-pipeline, performance-pipeline, database-pipeline, build-deploy-pipeline, monitoring-pipeline, maintenance-pipeline]
    if: always()
    steps:
      - name: Generate pipeline report
        run: |
          echo "# CI/CD Pipeline Report" > pipeline-report.md
          echo "" >> pipeline-report.md
          echo "## Pipeline Summary" >> pipeline-report.md
          echo "- Type: ${{ env.PIPELINE_TYPE }}" >> pipeline-report.md
          echo "- Branch: ${{ github.ref_name }}" >> pipeline-report.md
          echo "- Commit: ${{ github.sha }}" >> pipeline-report.md
          echo "- Trigger: ${{ github.event_name }}" >> pipeline-report.md
          echo "" >> pipeline-report.md
          echo "## Workflow Status" >> pipeline-report.md
          echo "- Dependencies: ${{ needs.dependencies-check.result }}" >> pipeline-report.md
          echo "- Testing: ${{ needs.testing-pipeline.result }}" >> pipeline-report.md
          echo "- Security: ${{ needs.security-pipeline.result }}" >> pipeline-report.md
          echo "- Performance: ${{ needs.performance-pipeline.result }}" >> pipeline-report.md
          echo "- Database: ${{ needs.database-pipeline.result }}" >> pipeline-report.md
          echo "- Build-Deploy: ${{ needs.build-deploy-pipeline.result }}" >> pipeline-report.md
          echo "- Monitoring: ${{ needs.monitoring-pipeline.result }}" >> pipeline-report.md
          echo "- Maintenance: ${{ needs.maintenance-pipeline.result }}" >> pipeline-report.md
          echo "" >> pipeline-report.md
          echo "## Completion Time" >> pipeline-report.md
          echo "Completed: $(date)" >> pipeline-report.md

      - name: Upload pipeline report
        uses: actions/upload-artifact@v4
        with:
          name: pipeline-report-${{ github.run_id }}
          path: pipeline-report.md
          retention-days: 30

      - name: Pipeline completion notification
        run: |
          echo "🎉 CI/CD Pipeline completed!"
          echo "Type: ${{ env.PIPELINE_TYPE }}"
          echo "Status: All workflows executed"
          echo "Timestamp: $(date)"
          
          # Check overall pipeline status
          FAILED_COUNT=0
          if [ "${{ needs.dependencies-check.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          if [ "${{ needs.testing-pipeline.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          if [ "${{ needs.security-pipeline.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          if [ "${{ needs.performance-pipeline.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          if [ "${{ needs.database-pipeline.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          if [ "${{ needs.build-deploy-pipeline.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          if [ "${{ needs.monitoring-pipeline.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          if [ "${{ needs.maintenance-pipeline.result }}" == "failure" ]; then FAILED_COUNT=$((FAILED_COUNT + 1)); fi
          
          if [ $FAILED_COUNT -gt 0 ]; then
            echo "⚠️ $FAILED_COUNT workflow(s) failed"
            exit 1
          else
            echo "✅ All workflows completed successfully"
          fi
